// <auto-generated />
using System;
using LibraryMgtApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryMgtApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200412124157_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryMgtApp.Context.Models.ApplicationIdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("5869ab93-81da-419b-b5ad-41a7bc82cae8"), ConcurrencyStamp = "df786600e8e14aed83db3a71915f0416", Name = "ADMIN", NormalizedName = "ADMIN" },
                        new { Id = new Guid("e4410972-f20a-4d07-afdb-c61550e3dd44"), ConcurrencyStamp = "76ca0a7f131645448f2ea69f2b6ba48e", Name = "USER", NormalizedName = "USER" }
                    );
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.ApplicationIdentityRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.ApplicationIdentityUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new { Id = 1, ClaimType = "AU_01", ClaimValue = "201", UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979") },
                        new { Id = 2, ClaimType = "AU_02", ClaimValue = "202", UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979") },
                        new { Id = 3, ClaimType = "AU_03", ClaimValue = "203", UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979") },
                        new { Id = 4, ClaimType = "AU_04", ClaimValue = "204", UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979") },
                        new { Id = 5, ClaimType = "AU_05", ClaimValue = "205", UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979") },
                        new { Id = 6, ClaimType = "PU_01", ClaimValue = "301", UserId = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f") },
                        new { Id = 7, ClaimType = "PU_02", ClaimValue = "302", UserId = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f") },
                        new { Id = 8, ClaimType = "PU_03", ClaimValue = "303", UserId = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f") },
                        new { Id = 9, ClaimType = "PU_04", ClaimValue = "304", UserId = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f") },
                        new { Id = 10, ClaimType = "PU_05", ClaimValue = "305", UserId = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f") }
                    );
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.ApplicationIdentityUserLogin", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasAlternateKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.ApplicationIdentityUserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979"), RoleId = new Guid("5869ab93-81da-419b-b5ad-41a7bc82cae8") },
                        new { UserId = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f"), RoleId = new Guid("e4410972-f20a-4d07-afdb-c61550e3dd44") }
                    );
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.ApplicationIdentityUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("Activated");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime>("CreatedOnUtc");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("FullName");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsDisabled");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NIN");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979"), AccessFailedCount = 0, Activated = true, ConcurrencyStamp = "afe51527-031f-49dc-bb57-b686d481b043", CreatedOnUtc = new DateTime(2020, 4, 12, 13, 41, 56, 857, DateTimeKind.Local), Email = "admin@gmail.com", EmailConfirmed = true, FirstName = "Timilehin", FullName = "Timilehin Ayodele", IsDisabled = false, LastName = "Ayodele", LockoutEnabled = false, NIN = "73279-40572", NormalizedEmail = "ADMIN@GMAIL.COM", NormalizedUserName = "ADMIN@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEDNwyESIixL1WYV3ctCng9+UOtPyj0R7E3b/Me+otkDUGeXX6MjOqsQkOgWHDviwGQ==", PhoneNumber = "07032369247", PhoneNumberConfirmed = true, SecurityStamp = "953d3fd1-99e3-4fe7-a20d-3598baa96099", TwoFactorEnabled = false, UserName = "admin@gmail.com" },
                        new { Id = new Guid("193a9488-ad75-41d6-a3e0-db3f10b6468f"), AccessFailedCount = 0, Activated = true, ConcurrencyStamp = "408736e6-1490-4a3a-ba8b-870f6ad27a9b", CreatedOnUtc = new DateTime(2020, 4, 12, 13, 41, 56, 886, DateTimeKind.Local), Email = "user@gmail.com", EmailConfirmed = true, FirstName = "Ayeni", FullName = "Ayeni Ayodele", IsDisabled = false, LastName = "Ayodele", LockoutEnabled = false, NIN = "67354-46571", NormalizedEmail = "USER@GMAIL.COM", NormalizedUserName = "USER@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAED2FLKQOO7bJslD5vVyoQYwhraevg4EyMelyO7FyaLOyoO6JGWKRdm7tuHMNLFDYew==", PhoneNumber = "07032367234", PhoneNumberConfirmed = true, SecurityStamp = "9c41c8cc-b489-40c6-bbcf-12edee681919", TwoFactorEnabled = false, UserName = "user@gmail.com" }
                    );
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorName")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedOn");

                    b.HasKey("Id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("ISBN")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<DateTime>("PublichYear");

                    b.Property<int>("StatusMode");

                    b.Property<string>("Title")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.BookCheckout", b =>
                {
                    b.Property<Guid>("BookId");

                    b.Property<Guid>("CheckoutId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedOn");

                    b.HasKey("BookId", "CheckoutId");

                    b.HasIndex("CheckoutId");

                    b.ToTable("BookCheckout");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.Checkout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CheckInDate");

                    b.Property<DateTime>("CheckoutDate");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<decimal>("OverDueAmount");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.Book", b =>
                {
                    b.HasOne("LibraryMgtApp.Context.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LibraryMgtApp.Context.Models.BookCheckout", b =>
                {
                    b.HasOne("LibraryMgtApp.Context.Models.Book", "Book")
                        .WithMany("BookCheckouts")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LibraryMgtApp.Context.Models.Checkout", "Checkout")
                        .WithMany("BookCheckouts")
                        .HasForeignKey("CheckoutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
